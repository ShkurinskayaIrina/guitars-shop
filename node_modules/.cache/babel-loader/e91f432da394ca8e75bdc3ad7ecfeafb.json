{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { errorHandle } from '../services/error-handle';\nimport { loadCatalog, loadGuitar, loadComments, loadMinMaxPrice } from './guitars-data/guitars-data';\nimport { APIRoute } from '../consts';\nexport const fetchCatalogGuitars = createAsyncThunk('guitars/fetchCatalogGuitars', async (_arg, _ref) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref;\n\n  try {\n    const {\n      data\n    } = await api.get(APIRoute.Guitars);\n    dispatch(loadCatalog(data));\n    dispatch(loadMinMaxPrice(data));\n  } catch (error) {\n    errorHandle(error);\n  }\n});\nexport const fetchGuitar = createAsyncThunk('guitars/fetchGuitar', async (id, _ref2) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref2;\n\n  try {\n    const {\n      data\n    } = await api.get(`${APIRoute.Guitars}/${id}`);\n    dispatch(loadGuitar(data));\n  } catch (error) {\n    errorHandle(error);\n  }\n});\nexport const fetchComments = createAsyncThunk('guitar/fetchComments', async (id, _ref3) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref3;\n\n  try {\n    const {\n      data\n    } = await api.get(`${APIRoute.Guitars}/${id}/comments`); // eslint-disable-next-line no-console\n\n    console.log('отзывы'); // eslint-disable-next-line no-console\n\n    console.log(data);\n    dispatch(loadComments({\n      id,\n      data\n    }));\n  } catch (error) {\n    errorHandle(error);\n  }\n});\nexport const addCommentAction = createAsyncThunk('guitar/addCommentAction', async (comment, _ref4) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref4;\n\n  try {\n    await api.post(APIRoute.Comments, comment);\n    dispatch(fetchComments(Number(comment.guitarId)));\n  } catch (error) {\n    errorHandle(error);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","errorHandle","loadCatalog","loadGuitar","loadComments","loadMinMaxPrice","APIRoute","fetchCatalogGuitars","_arg","dispatch","extra","api","data","get","Guitars","error","fetchGuitar","id","fetchComments","console","log","addCommentAction","comment","post","Comments","Number","guitarId"],"sources":["C:/Ирина/Projects/guitars-shop/src/store/api-actions.ts"],"sourcesContent":["import {AxiosInstance} from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { AppDispatch, State } from '../types/state';\r\nimport { errorHandle } from '../services/error-handle';\r\nimport { loadCatalog, loadGuitar, loadComments, loadMinMaxPrice } from './guitars-data/guitars-data';\r\n\r\nimport { Guitar, Guitars, NewComment, Comments } from '../types/guitars';\r\nimport { APIRoute } from '../consts';\r\n\r\nexport const fetchCatalogGuitars = createAsyncThunk<void, undefined, {\r\n  dispatch: AppDispatch,\r\n  state: State,\r\n  extra: AxiosInstance\r\n}>(\r\n  'guitars/fetchCatalogGuitars',\r\n  async(_arg, {dispatch, extra: api})=>{\r\n    try {\r\n      const { data } = await api.get<Guitars>(APIRoute.Guitars);\r\n      dispatch(loadCatalog(data));\r\n      dispatch(loadMinMaxPrice(data));\r\n    } catch (error) {\r\n      errorHandle(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const fetchGuitar = createAsyncThunk<void, number, {\r\n  dispatch: AppDispatch,\r\n  state: State,\r\n  extra: AxiosInstance\r\n}>(\r\n  'guitars/fetchGuitar',\r\n  async (id, {dispatch, extra: api}) => {\r\n    try {\r\n      const {data} = await api.get<Guitar>(`${APIRoute.Guitars}/${id}`);\r\n      dispatch(loadGuitar(data));\r\n    } catch (error) {\r\n      errorHandle(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const fetchComments = createAsyncThunk<void, number, {\r\n  dispatch: AppDispatch,\r\n  state: State,\r\n  extra: AxiosInstance\r\n}>(\r\n  'guitar/fetchComments',\r\n  async (id, {dispatch, extra: api}) => {\r\n    try {\r\n      const {data} = await api.get<Comments>(`${APIRoute.Guitars}/${id}/comments`);\r\n      // eslint-disable-next-line no-console\r\n      console.log('отзывы');\r\n      // eslint-disable-next-line no-console\r\n      console.log(data);\r\n      dispatch(loadComments({id, data}));\r\n    } catch (error) {\r\n      errorHandle(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addCommentAction  = createAsyncThunk<void, NewComment, {\r\n  dispatch: AppDispatch,\r\n  state: State,\r\n  extra: AxiosInstance\r\n}>(\r\n  'guitar/addCommentAction',\r\n  async (comment, {dispatch, extra: api}) => {\r\n    try {\r\n      await api.post<Comments>(APIRoute.Comments, comment);\r\n      dispatch(fetchComments(Number(comment.guitarId)));\r\n    } catch (error) {\r\n      errorHandle(error);\r\n    }\r\n  },\r\n);\r\n\r\n\r\n"],"mappings":"AACA,SAASA,gBAAT,QAAiC,kBAAjC;AAEA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,YAAlC,EAAgDC,eAAhD,QAAuE,6BAAvE;AAGA,SAASC,QAAT,QAAyB,WAAzB;AAEA,OAAO,MAAMC,mBAAmB,GAAGP,gBAAgB,CAKjD,6BALiD,EAMjD,OAAMQ,IAAN,WAAqC;EAAA,IAAzB;IAACC,QAAD;IAAWC,KAAK,EAAEC;EAAlB,CAAyB;;EACnC,IAAI;IACF,MAAM;MAAEC;IAAF,IAAW,MAAMD,GAAG,CAACE,GAAJ,CAAiBP,QAAQ,CAACQ,OAA1B,CAAvB;IACAL,QAAQ,CAACP,WAAW,CAACU,IAAD,CAAZ,CAAR;IACAH,QAAQ,CAACJ,eAAe,CAACO,IAAD,CAAhB,CAAR;EACD,CAJD,CAIE,OAAOG,KAAP,EAAc;IACdd,WAAW,CAACc,KAAD,CAAX;EACD;AACF,CAdgD,CAA5C;AAiBP,OAAO,MAAMC,WAAW,GAAGhB,gBAAgB,CAKzC,qBALyC,EAMzC,OAAOiB,EAAP,YAAsC;EAAA,IAA3B;IAACR,QAAD;IAAWC,KAAK,EAAEC;EAAlB,CAA2B;;EACpC,IAAI;IACF,MAAM;MAACC;IAAD,IAAS,MAAMD,GAAG,CAACE,GAAJ,CAAiB,GAAEP,QAAQ,CAACQ,OAAQ,IAAGG,EAAG,EAA1C,CAArB;IACAR,QAAQ,CAACN,UAAU,CAACS,IAAD,CAAX,CAAR;EACD,CAHD,CAGE,OAAOG,KAAP,EAAc;IACdd,WAAW,CAACc,KAAD,CAAX;EACD;AACF,CAbwC,CAApC;AAgBP,OAAO,MAAMG,aAAa,GAAGlB,gBAAgB,CAK3C,sBAL2C,EAM3C,OAAOiB,EAAP,YAAsC;EAAA,IAA3B;IAACR,QAAD;IAAWC,KAAK,EAAEC;EAAlB,CAA2B;;EACpC,IAAI;IACF,MAAM;MAACC;IAAD,IAAS,MAAMD,GAAG,CAACE,GAAJ,CAAmB,GAAEP,QAAQ,CAACQ,OAAQ,IAAGG,EAAG,WAA5C,CAArB,CADE,CAEF;;IACAE,OAAO,CAACC,GAAR,CAAY,QAAZ,EAHE,CAIF;;IACAD,OAAO,CAACC,GAAR,CAAYR,IAAZ;IACAH,QAAQ,CAACL,YAAY,CAAC;MAACa,EAAD;MAAKL;IAAL,CAAD,CAAb,CAAR;EACD,CAPD,CAOE,OAAOG,KAAP,EAAc;IACdd,WAAW,CAACc,KAAD,CAAX;EACD;AACF,CAjB0C,CAAtC;AAoBP,OAAO,MAAMM,gBAAgB,GAAIrB,gBAAgB,CAK/C,yBAL+C,EAM/C,OAAOsB,OAAP,YAA2C;EAAA,IAA3B;IAACb,QAAD;IAAWC,KAAK,EAAEC;EAAlB,CAA2B;;EACzC,IAAI;IACF,MAAMA,GAAG,CAACY,IAAJ,CAAmBjB,QAAQ,CAACkB,QAA5B,EAAsCF,OAAtC,CAAN;IACAb,QAAQ,CAACS,aAAa,CAACO,MAAM,CAACH,OAAO,CAACI,QAAT,CAAP,CAAd,CAAR;EACD,CAHD,CAGE,OAAOX,KAAP,EAAc;IACdd,WAAW,CAACc,KAAD,CAAX;EACD;AACF,CAb8C,CAA1C"},"metadata":{},"sourceType":"module"}