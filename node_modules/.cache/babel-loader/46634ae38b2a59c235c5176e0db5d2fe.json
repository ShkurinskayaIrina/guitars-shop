{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { errorHandle } from '../services/error-handle';\nimport { loadCatalog, loadGuitar, loadComments } from './guitars-data/guitars-data';\nimport { APIRoute } from '../consts';\nexport const fetchCatalogGuitars = createAsyncThunk('guitars/fetchCatalogGuitars', async (_arg, _ref) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref;\n\n  try {\n    const {\n      data\n    } = await api.get(APIRoute.Guitars);\n    dispatch(loadCatalog(data));\n  } catch (error) {\n    errorHandle(error);\n  }\n});\nexport const fetchGuitar = createAsyncThunk('guitars/fetchGuitar', async (id, _ref2) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref2;\n\n  try {\n    const {\n      data\n    } = await api.get(`${APIRoute.Guitars}/${id}`);\n    dispatch(loadGuitar(data));\n  } catch (error) {\n    errorHandle(error);\n  }\n});\nexport const fetchComments = createAsyncThunk('guitar/fetchComments', async (id, _ref3) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref3;\n\n  try {\n    const {\n      data\n    } = await api.get(`${APIRoute.Guitars}/${id}/comments`);\n    dispatch(loadComments(data));\n  } catch (error) {\n    errorHandle(error);\n  }\n});\nexport const addCommentAction = createAsyncThunk('guitar/addCommentAction', async (comment, _ref4) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref4;\n\n  try {\n    await api.post(APIRoute.Comments, comment);\n  } catch (error) {\n    errorHandle(error);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","errorHandle","loadCatalog","loadGuitar","loadComments","APIRoute","fetchCatalogGuitars","_arg","dispatch","extra","api","data","get","Guitars","error","fetchGuitar","id","fetchComments","addCommentAction","comment","post","Comments"],"sources":["C:/Ирина/Projects/guitars-shop/src/store/api-actions.ts"],"sourcesContent":["import {AxiosInstance} from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { AppDispatch, State } from '../types/state';\r\nimport { errorHandle } from '../services/error-handle';\r\nimport { loadCatalog, loadGuitar, loadComments } from './guitars-data/guitars-data';\r\n\r\nimport { Guitar, Guitars, NewComment, Comments } from '../types/guitars';\r\nimport { APIRoute } from '../consts';\r\n\r\nexport const fetchCatalogGuitars = createAsyncThunk<void, undefined, {\r\n  dispatch: AppDispatch,\r\n  state: State,\r\n  extra: AxiosInstance\r\n}>(\r\n  'guitars/fetchCatalogGuitars',\r\n  async(_arg, {dispatch, extra: api})=>{\r\n    try {\r\n      const { data } = await api.get<Guitars>(APIRoute.Guitars);\r\n      dispatch(loadCatalog(data));\r\n    } catch (error) {\r\n      errorHandle(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const fetchGuitar = createAsyncThunk<void, number, {\r\n  dispatch: AppDispatch,\r\n  state: State,\r\n  extra: AxiosInstance\r\n}>(\r\n  'guitars/fetchGuitar',\r\n  async (id, {dispatch, extra: api}) => {\r\n    try {\r\n      const {data} = await api.get<Guitar>(`${APIRoute.Guitars}/${id}`);\r\n      dispatch(loadGuitar(data));\r\n    } catch (error) {\r\n      errorHandle(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const fetchComments = createAsyncThunk<void, number, {\r\n  dispatch: AppDispatch,\r\n  state: State,\r\n  extra: AxiosInstance\r\n}>(\r\n  'guitar/fetchComments',\r\n  async (id, {dispatch, extra: api}) => {\r\n    try {\r\n      const {data} = await api.get<Comments>(`${APIRoute.Guitars}/${id}/comments`);\r\n      dispatch(loadComments(data));\r\n    } catch (error) {\r\n      errorHandle(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addCommentAction  = createAsyncThunk<void, NewComment, {\r\n  dispatch: AppDispatch,\r\n  state: State,\r\n  extra: AxiosInstance\r\n}>(\r\n  'guitar/addCommentAction',\r\n  async (comment, {dispatch, extra: api}) => {\r\n    try {\r\n      await api.post<Comments>(APIRoute.Comments, comment);\r\n    } catch (error) {\r\n      errorHandle(error);\r\n    }\r\n  },\r\n);\r\n\r\n\r\n"],"mappings":"AACA,SAASA,gBAAT,QAAiC,kBAAjC;AAEA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,YAAlC,QAAsD,6BAAtD;AAGA,SAASC,QAAT,QAAyB,WAAzB;AAEA,OAAO,MAAMC,mBAAmB,GAAGN,gBAAgB,CAKjD,6BALiD,EAMjD,OAAMO,IAAN,WAAqC;EAAA,IAAzB;IAACC,QAAD;IAAWC,KAAK,EAAEC;EAAlB,CAAyB;;EACnC,IAAI;IACF,MAAM;MAAEC;IAAF,IAAW,MAAMD,GAAG,CAACE,GAAJ,CAAiBP,QAAQ,CAACQ,OAA1B,CAAvB;IACAL,QAAQ,CAACN,WAAW,CAACS,IAAD,CAAZ,CAAR;EACD,CAHD,CAGE,OAAOG,KAAP,EAAc;IACdb,WAAW,CAACa,KAAD,CAAX;EACD;AACF,CAbgD,CAA5C;AAgBP,OAAO,MAAMC,WAAW,GAAGf,gBAAgB,CAKzC,qBALyC,EAMzC,OAAOgB,EAAP,YAAsC;EAAA,IAA3B;IAACR,QAAD;IAAWC,KAAK,EAAEC;EAAlB,CAA2B;;EACpC,IAAI;IACF,MAAM;MAACC;IAAD,IAAS,MAAMD,GAAG,CAACE,GAAJ,CAAiB,GAAEP,QAAQ,CAACQ,OAAQ,IAAGG,EAAG,EAA1C,CAArB;IACAR,QAAQ,CAACL,UAAU,CAACQ,IAAD,CAAX,CAAR;EACD,CAHD,CAGE,OAAOG,KAAP,EAAc;IACdb,WAAW,CAACa,KAAD,CAAX;EACD;AACF,CAbwC,CAApC;AAgBP,OAAO,MAAMG,aAAa,GAAGjB,gBAAgB,CAK3C,sBAL2C,EAM3C,OAAOgB,EAAP,YAAsC;EAAA,IAA3B;IAACR,QAAD;IAAWC,KAAK,EAAEC;EAAlB,CAA2B;;EACpC,IAAI;IACF,MAAM;MAACC;IAAD,IAAS,MAAMD,GAAG,CAACE,GAAJ,CAAmB,GAAEP,QAAQ,CAACQ,OAAQ,IAAGG,EAAG,WAA5C,CAArB;IACAR,QAAQ,CAACJ,YAAY,CAACO,IAAD,CAAb,CAAR;EACD,CAHD,CAGE,OAAOG,KAAP,EAAc;IACdb,WAAW,CAACa,KAAD,CAAX;EACD;AACF,CAb0C,CAAtC;AAgBP,OAAO,MAAMI,gBAAgB,GAAIlB,gBAAgB,CAK/C,yBAL+C,EAM/C,OAAOmB,OAAP,YAA2C;EAAA,IAA3B;IAACX,QAAD;IAAWC,KAAK,EAAEC;EAAlB,CAA2B;;EACzC,IAAI;IACF,MAAMA,GAAG,CAACU,IAAJ,CAAmBf,QAAQ,CAACgB,QAA5B,EAAsCF,OAAtC,CAAN;EACD,CAFD,CAEE,OAAOL,KAAP,EAAc;IACdb,WAAW,CAACa,KAAD,CAAX;EACD;AACF,CAZ8C,CAA1C"},"metadata":{},"sourceType":"module"}