{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0418\\u0440\\u0438\\u043D\\u0430\\\\Projects\\\\guitars-shop\\\\src\\\\components\\\\reviews-list\\\\reviews-list.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { store } from '../../store/index';\nimport { fetchComments } from '../../store/api-actions';\nimport { useAppSelector } from '../../hooks';\nimport { NameSpace } from '../../consts'; // import Review from '../review/review';\n\nimport ReviewModal from '../review-modal/review-modal';\nimport ModalSuccess from '../modal-success/modal-success'; // const COMMENTS_COUNT_PER_STEP = 3;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReviewsList(_ref) {\n  _s();\n\n  let {\n    guitarId,\n    guitarName\n  } = _ref;\n  // const [commentsCount, setCommentsCount] = useState(COMMENTS_COUNT_PER_STEP);\n  const [isReviewModalOpened, setIsReviewModalOpened] = useState(false);\n  const [isModalSuccessOpened, setIsModalSuccessOpened] = useState(false);\n  useEffect(() => {\n    store.dispatch(fetchComments(Number(guitarId)));\n  }, [guitarId]);\n  useEffect(() => {\n    document.addEventListener('scroll', scrollHandler);\n    return function () {\n      document.removeEventListener('scroll', scrollHandler);\n    };\n  });\n  const guitarsComments = useAppSelector(state => state[NameSpace.Data].guitarsComments); // eslint-disable-next-line no-console\n  // console.log(guitarsComments);\n\n  let guitarComments;\n\n  if (guitarId !== undefined) {\n    guitarComments = guitarsComments[Number(guitarId)]; // eslint-disable-next-line no-console\n\n    console.log('guitarComments'); // eslint-disable-next-line no-console\n\n    console.log(guitarComments); // const commentsSorted =  guitarComments.slice(0).sort((prev, next) =>\n    //   new Date(next.createAt).getTime() - new Date(prev.createAt).getTime(),\n    // );\n    // const commentsForRender = commentsSorted.slice(0, commentsCount);\n  } // function handleShowMoreButtonClick() {\n  // setCommentsCount(Math.min(commentsSorted.length, commentsCount + COMMENTS_COUNT_PER_STEP));\n  // }\n\n\n  function scrollHandler() {//   if ((document.documentElement.scrollHeight -\n    //     document.documentElement.scrollTop - window.innerHeight)<250 &&\n    //      commentsCount<guitarComments.length) {\n    //     setCommentsCount(Math.min(commentsSorted.length, commentsCount + COMMENTS_COUNT_PER_STEP));\n    //   }\n  }\n\n  function onReviewBtnClick() {\n    setIsReviewModalOpened(true);\n  }\n\n  function onReviewCloseClick() {\n    setIsReviewModalOpened(false);\n  }\n\n  function openModalSuccessSubmit() {\n    setIsModalSuccessOpened(true);\n  }\n\n  function closeModalSuccessSubmit() {\n    setIsModalSuccessOpened(false);\n  } // function onUpButtonClick() {\n  //   window.scrollTo({\n  //     top: 0,\n  //     left: 0,\n  //     behavior: 'smooth',\n  //   });\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"reviews\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"reviews__title title title--bigger\",\n      children: \"\\u041E\\u0442\\u0437\\u044B\\u0432\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      className: \"button button--red-border button--big reviews__sumbit-button\",\n      to: \"\",\n      onClick: onReviewBtnClick,\n      children: \"\\u041E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0437\\u044B\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), isReviewModalOpened && /*#__PURE__*/_jsxDEV(ReviewModal, {\n      idGuitar: guitarId,\n      guitarName: guitarName,\n      onReviewCloseClick: onReviewCloseClick,\n      openModalSuccessSubmit: openModalSuccessSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), isModalSuccessOpened && /*#__PURE__*/_jsxDEV(ModalSuccess, {\n      closeModalSuccessSubmit: closeModalSuccessSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReviewsList, \"hKz2h8+VANc264eoyWwS/oN5K3s=\", false, function () {\n  return [useAppSelector];\n});\n\n_c = ReviewsList;\nexport default ReviewsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewsList\");","map":{"version":3,"names":["useEffect","useState","Link","store","fetchComments","useAppSelector","NameSpace","ReviewModal","ModalSuccess","ReviewsList","guitarId","guitarName","isReviewModalOpened","setIsReviewModalOpened","isModalSuccessOpened","setIsModalSuccessOpened","dispatch","Number","document","addEventListener","scrollHandler","removeEventListener","guitarsComments","state","Data","guitarComments","undefined","console","log","onReviewBtnClick","onReviewCloseClick","openModalSuccessSubmit","closeModalSuccessSubmit"],"sources":["C:/Ирина/Projects/guitars-shop/src/components/reviews-list/reviews-list.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { store } from '../../store/index';\r\nimport { fetchComments } from '../../store/api-actions';\r\nimport { useAppSelector } from '../../hooks';\r\nimport { NameSpace } from '../../consts';\r\n\r\n// import Review from '../review/review';\r\nimport ReviewModal from '../review-modal/review-modal';\r\nimport ModalSuccess from '../modal-success/modal-success';\r\n\r\n// const COMMENTS_COUNT_PER_STEP = 3;\r\n\r\ntype Props = {\r\n  guitarId?: string,\r\n  guitarName:string,\r\n}\r\n\r\nfunction ReviewsList({guitarId, guitarName}: Props): JSX.Element {\r\n  // const [commentsCount, setCommentsCount] = useState(COMMENTS_COUNT_PER_STEP);\r\n  const [isReviewModalOpened, setIsReviewModalOpened] = useState(false);\r\n  const [isModalSuccessOpened, setIsModalSuccessOpened] = useState(false);\r\n\r\n  useEffect(() => {\r\n    store.dispatch(fetchComments(Number(guitarId)));\r\n  }, [guitarId]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('scroll', scrollHandler);\r\n    return function () {\r\n      document.removeEventListener('scroll', scrollHandler);\r\n    };\r\n  });\r\n\r\n  const guitarsComments = useAppSelector((state) => state[NameSpace.Data].guitarsComments);\r\n  // eslint-disable-next-line no-console\r\n  // console.log(guitarsComments);\r\n  let guitarComments;\r\n\r\n  if (guitarId !== undefined) {\r\n    guitarComments = guitarsComments[Number(guitarId)];\r\n\r\n    // eslint-disable-next-line no-console\r\n    console.log('guitarComments');\r\n    // eslint-disable-next-line no-console\r\n    console.log(guitarComments);\r\n    // const commentsSorted =  guitarComments.slice(0).sort((prev, next) =>\r\n    //   new Date(next.createAt).getTime() - new Date(prev.createAt).getTime(),\r\n    // );\r\n\r\n    // const commentsForRender = commentsSorted.slice(0, commentsCount);\r\n\r\n  }\r\n\r\n\r\n  // function handleShowMoreButtonClick() {\r\n  // setCommentsCount(Math.min(commentsSorted.length, commentsCount + COMMENTS_COUNT_PER_STEP));\r\n  // }\r\n\r\n  function scrollHandler() {\r\n  //   if ((document.documentElement.scrollHeight -\r\n  //     document.documentElement.scrollTop - window.innerHeight)<250 &&\r\n  //      commentsCount<guitarComments.length) {\r\n  //     setCommentsCount(Math.min(commentsSorted.length, commentsCount + COMMENTS_COUNT_PER_STEP));\r\n  //   }\r\n  }\r\n\r\n  function onReviewBtnClick(){\r\n    setIsReviewModalOpened(true);\r\n  }\r\n\r\n  function onReviewCloseClick(){\r\n    setIsReviewModalOpened(false);\r\n  }\r\n\r\n  function openModalSuccessSubmit(){\r\n    setIsModalSuccessOpened(true);\r\n  }\r\n\r\n  function closeModalSuccessSubmit(){\r\n    setIsModalSuccessOpened(false);\r\n  }\r\n\r\n  // function onUpButtonClick() {\r\n  //   window.scrollTo({\r\n  //     top: 0,\r\n  //     left: 0,\r\n  //     behavior: 'smooth',\r\n  //   });\r\n  // }\r\n\r\n  return (\r\n    <section className=\"reviews\">\r\n      <h3 className=\"reviews__title title title--bigger\">Отзывы</h3>\r\n      <Link className=\"button button--red-border button--big reviews__sumbit-button\"\r\n        to=\"\" onClick={onReviewBtnClick}\r\n      >Оставить отзыв\r\n      </Link>\r\n\r\n      {/* {commentsForRender.map((comment) => (\r\n        <Review commentForRender={comment} key={comment.id}/>\r\n      ))} */}\r\n\r\n      {/* {\r\n        commentsSorted.length>commentsCount ?\r\n          <button className=\"button button--medium reviews__more-button hidden\"\r\n            onClick={() => handleShowMoreButtonClick()}\r\n          >\r\n        Показать еще отзывы\r\n          </button> :\r\n          ''\r\n      } */}\r\n\r\n      {/* {\r\n        commentsSorted.length === 0 ?\r\n          <Link to=\"\"\r\n            className=\"button button--up button--red-border button--big\"\r\n            style={{bottom:'-61px', right:'0', position:'absolute'}}\r\n            onClick={onUpButtonClick}\r\n          >\r\n        Наверх\r\n          </Link> :\r\n          <Link to=\"\"\r\n            className=\"button button--up button--red-border button--big reviews__up-button\"\r\n            onClick={onUpButtonClick}\r\n          >\r\n      Наверх\r\n          </Link>\r\n      } */}\r\n\r\n\r\n      {isReviewModalOpened &&\r\n      <ReviewModal idGuitar={guitarId}\r\n        guitarName={guitarName}\r\n        onReviewCloseClick={onReviewCloseClick}\r\n        openModalSuccessSubmit={openModalSuccessSubmit}\r\n      />}\r\n\r\n      {isModalSuccessOpened &&\r\n      <ModalSuccess closeModalSuccessSubmit={closeModalSuccessSubmit}/>}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ReviewsList;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,SAAT,QAA0B,cAA1B,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,YAAP,MAAyB,gCAAzB,C,CAEA;;;;AAOA,SAASC,WAAT,OAAiE;EAAA;;EAAA,IAA5C;IAACC,QAAD;IAAWC;EAAX,CAA4C;EAC/D;EACA,MAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDZ,QAAQ,CAAC,KAAD,CAA9D;EACA,MAAM,CAACa,oBAAD,EAAuBC,uBAAvB,IAAkDd,QAAQ,CAAC,KAAD,CAAhE;EAEAD,SAAS,CAAC,MAAM;IACdG,KAAK,CAACa,QAAN,CAAeZ,aAAa,CAACa,MAAM,CAACP,QAAD,CAAP,CAA5B;EACD,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;EAIAV,SAAS,CAAC,MAAM;IACdkB,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoCC,aAApC;IACA,OAAO,YAAY;MACjBF,QAAQ,CAACG,mBAAT,CAA6B,QAA7B,EAAuCD,aAAvC;IACD,CAFD;EAGD,CALQ,CAAT;EAOA,MAAME,eAAe,GAAGjB,cAAc,CAAEkB,KAAD,IAAWA,KAAK,CAACjB,SAAS,CAACkB,IAAX,CAAL,CAAsBF,eAAlC,CAAtC,CAhB+D,CAiB/D;EACA;;EACA,IAAIG,cAAJ;;EAEA,IAAIf,QAAQ,KAAKgB,SAAjB,EAA4B;IAC1BD,cAAc,GAAGH,eAAe,CAACL,MAAM,CAACP,QAAD,CAAP,CAAhC,CAD0B,CAG1B;;IACAiB,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAJ0B,CAK1B;;IACAD,OAAO,CAACC,GAAR,CAAYH,cAAZ,EAN0B,CAO1B;IACA;IACA;IAEA;EAED,CAlC8D,CAqC/D;EACA;EACA;;;EAEA,SAASL,aAAT,GAAyB,CACzB;IACA;IACA;IACA;IACA;EACC;;EAED,SAASS,gBAAT,GAA2B;IACzBhB,sBAAsB,CAAC,IAAD,CAAtB;EACD;;EAED,SAASiB,kBAAT,GAA6B;IAC3BjB,sBAAsB,CAAC,KAAD,CAAtB;EACD;;EAED,SAASkB,sBAAT,GAAiC;IAC/BhB,uBAAuB,CAAC,IAAD,CAAvB;EACD;;EAED,SAASiB,uBAAT,GAAkC;IAChCjB,uBAAuB,CAAC,KAAD,CAAvB;EACD,CA/D8D,CAiE/D;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBACE;IAAS,SAAS,EAAC,SAAnB;IAAA,wBACE;MAAI,SAAS,EAAC,oCAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,IAAD;MAAM,SAAS,EAAC,8DAAhB;MACE,EAAE,EAAC,EADL;MACQ,OAAO,EAAEc,gBADjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,EAuCGjB,mBAAmB,iBACpB,QAAC,WAAD;MAAa,QAAQ,EAAEF,QAAvB;MACE,UAAU,EAAEC,UADd;MAEE,kBAAkB,EAAEmB,kBAFtB;MAGE,sBAAsB,EAAEC;IAH1B;MAAA;MAAA;MAAA;IAAA,QAxCF,EA8CGjB,oBAAoB,iBACrB,QAAC,YAAD;MAAc,uBAAuB,EAAEkB;IAAvC;MAAA;MAAA;MAAA;IAAA,QA/CF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmDD;;GA5HQvB,W;UAgBiBJ,c;;;KAhBjBI,W;AA8HT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}