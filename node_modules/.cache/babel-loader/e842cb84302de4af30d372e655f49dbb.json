{"ast":null,"code":"// import {useState} from 'react';\n// import {QuestionGenre, UserGenreQuestionAnswer} from '../types/question';\nimport { SortType, SortOrder } from '../consts';\nexport const useSortType = (guitars, sortTypeChecked, sortOrderChecked) => {\n  if (sortTypeChecked !== SortType.Popularity) {\n    if (sortOrderChecked === SortOrder.Up) {\n      return guitars.slice(0).sort((prev, next) => prev.price - next.price);\n    }\n\n    if (sortOrderChecked === SortOrder.Down) {\n      return guitars.slice(0).sort((prev, next) => next.price - prev.price);\n    }\n  }\n\n  if (sortTypeChecked === SortType.Popularity) {\n    if (sortOrderChecked === SortOrder.Up) {\n      return guitars.slice(0).sort((prev, next) => prev.rating - next.rating);\n    }\n\n    if (sortOrderChecked === SortOrder.Down) {\n      return guitars.slice(0).sort((prev, next) => next.rating - prev.rating);\n    }\n  }\n\n  return guitars;\n};","map":{"version":3,"names":["SortType","SortOrder","useSortType","guitars","sortTypeChecked","sortOrderChecked","Popularity","Up","slice","sort","prev","next","price","Down","rating"],"sources":["C:/Ирина/Projects/guitars-shop/src/hooks/use-sort-type.ts"],"sourcesContent":["// import {useState} from 'react';\r\n// import {QuestionGenre, UserGenreQuestionAnswer} from '../types/question';\r\nimport { SortType, SortOrder } from '../consts';\r\nimport { Guitars } from '../types/guitars';\r\n\r\n\r\nexport const useSortType = (guitars:Guitars, sortTypeChecked:SortType, sortOrderChecked: SortOrder): Guitars => {\r\n\r\n  if (sortTypeChecked !== SortType.Popularity) {\r\n    if (sortOrderChecked === SortOrder.Up) {\r\n      return guitars.slice(0).sort((prev, next) => prev.price - next.price);\r\n    }\r\n\r\n    if ( sortOrderChecked === SortOrder.Down) {\r\n      return guitars.slice(0).sort((prev, next) => next.price - prev.price);\r\n    }\r\n  }\r\n\r\n  if (sortTypeChecked === SortType.Popularity) {\r\n    if (sortOrderChecked === SortOrder.Up) {\r\n      return guitars.slice(0).sort((prev, next) => prev.rating - next.rating);\r\n    }\r\n\r\n    if ( sortOrderChecked === SortOrder.Down) {\r\n      return guitars.slice(0).sort((prev, next) => next.rating - prev.rating);\r\n    }\r\n  }\r\n\r\n  return guitars;\r\n};\r\n"],"mappings":"AAAA;AACA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,WAApC;AAIA,OAAO,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAkBC,eAAlB,EAA4CC,gBAA5C,KAAqF;EAE9G,IAAID,eAAe,KAAKJ,QAAQ,CAACM,UAAjC,EAA6C;IAC3C,IAAID,gBAAgB,KAAKJ,SAAS,CAACM,EAAnC,EAAuC;MACrC,OAAOJ,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiBC,IAAjB,CAAsB,CAACC,IAAD,EAAOC,IAAP,KAAgBD,IAAI,CAACE,KAAL,GAAaD,IAAI,CAACC,KAAxD,CAAP;IACD;;IAED,IAAKP,gBAAgB,KAAKJ,SAAS,CAACY,IAApC,EAA0C;MACxC,OAAOV,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiBC,IAAjB,CAAsB,CAACC,IAAD,EAAOC,IAAP,KAAgBA,IAAI,CAACC,KAAL,GAAaF,IAAI,CAACE,KAAxD,CAAP;IACD;EACF;;EAED,IAAIR,eAAe,KAAKJ,QAAQ,CAACM,UAAjC,EAA6C;IAC3C,IAAID,gBAAgB,KAAKJ,SAAS,CAACM,EAAnC,EAAuC;MACrC,OAAOJ,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiBC,IAAjB,CAAsB,CAACC,IAAD,EAAOC,IAAP,KAAgBD,IAAI,CAACI,MAAL,GAAcH,IAAI,CAACG,MAAzD,CAAP;IACD;;IAED,IAAKT,gBAAgB,KAAKJ,SAAS,CAACY,IAApC,EAA0C;MACxC,OAAOV,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiBC,IAAjB,CAAsB,CAACC,IAAD,EAAOC,IAAP,KAAgBA,IAAI,CAACG,MAAL,GAAcJ,IAAI,CAACI,MAAzD,CAAP;IACD;EACF;;EAED,OAAOX,OAAP;AACD,CAvBM"},"metadata":{},"sourceType":"module"}